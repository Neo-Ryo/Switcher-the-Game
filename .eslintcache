[{"/home/masato/game-work/switcher-front/src/index.js":"1","/home/masato/game-work/switcher-front/src/App.js":"2","/home/masato/game-work/switcher-front/src/serviceWorker.js":"3","/home/masato/game-work/switcher-front/src/components/store/index.js":"4","/home/masato/game-work/switcher-front/src/components/Router.jsx":"5","/home/masato/game-work/switcher-front/src/components/store/user.reducer.js":"6","/home/masato/game-work/switcher-front/src/components/Start.jsx":"7","/home/masato/game-work/switcher-front/src/components/Login.jsx":"8","/home/masato/game-work/switcher-front/src/components/GameBoard.jsx":"9","/home/masato/game-work/switcher-front/src/components/levels/LevelOne.jsx":"10","/home/masato/game-work/switcher-front/src/components/levels/LevelThree.jsx":"11","/home/masato/game-work/switcher-front/src/components/levels/LevelTwo.jsx":"12","/home/masato/game-work/switcher-front/src/components/levels/LevelFour.jsx":"13","/home/masato/game-work/switcher-front/src/components/levels/LevelFive.jsx":"14","/home/masato/game-work/switcher-front/src/components/store/actionTypes.js":"15","/home/masato/game-work/switcher-front/src/urls.js":"16","/home/masato/game-work/switcher-front/src/components/store/actionCreators.js":"17","/home/masato/game-work/switcher-front/src/components/LevelCard.jsx":"18","/home/masato/game-work/switcher-front/src/components/Credits.jsx":"19","/home/masato/game-work/switcher-front/src/components/ModalScore.jsx":"20","/home/masato/game-work/switcher-front/src/components/levels/ModalOne.jsx":"21","/home/masato/game-work/switcher-front/src/components/levels/ModalThree.jsx":"22","/home/masato/game-work/switcher-front/src/components/levels/ModalTwo.jsx":"23","/home/masato/game-work/switcher-front/src/components/levels/ModalFour.jsx":"24","/home/masato/game-work/switcher-front/src/components/levels/ModalFive.jsx":"25"},{"size":1034,"mtime":1595851228048,"results":"26","hashOfConfig":"27"},{"size":204,"mtime":1595851312800,"results":"28","hashOfConfig":"27"},{"size":5086,"mtime":1593635467599,"results":"29","hashOfConfig":"27"},{"size":348,"mtime":1610119984849,"results":"30","hashOfConfig":"27"},{"size":984,"mtime":1594842562488,"results":"31","hashOfConfig":"27"},{"size":977,"mtime":1610120309731,"results":"32","hashOfConfig":"27"},{"size":1203,"mtime":1596050482042,"results":"33","hashOfConfig":"27"},{"size":10574,"mtime":1610116260251,"results":"34","hashOfConfig":"27"},{"size":4189,"mtime":1610120481712,"results":"35","hashOfConfig":"27"},{"size":3862,"mtime":1610119040110,"results":"36","hashOfConfig":"27"},{"size":10982,"mtime":1596015727148,"results":"37","hashOfConfig":"27"},{"size":8814,"mtime":1596014114592,"results":"38","hashOfConfig":"27"},{"size":10696,"mtime":1596306318712,"results":"39","hashOfConfig":"27"},{"size":23050,"mtime":1596305752359,"results":"40","hashOfConfig":"27"},{"size":122,"mtime":1610119629078,"results":"41","hashOfConfig":"27"},{"size":107,"mtime":1610014408375,"results":"42","hashOfConfig":"27"},{"size":1998,"mtime":1610120356131,"results":"43","hashOfConfig":"27"},{"size":499,"mtime":1596380379808,"results":"44","hashOfConfig":"27"},{"size":2074,"mtime":1596387460392,"results":"45","hashOfConfig":"27"},{"size":2068,"mtime":1610032498161,"results":"46","hashOfConfig":"27"},{"size":1113,"mtime":1596050776032,"results":"47","hashOfConfig":"27"},{"size":1125,"mtime":1596014710672,"results":"48","hashOfConfig":"27"},{"size":1149,"mtime":1596050764924,"results":"49","hashOfConfig":"27"},{"size":1078,"mtime":1596051176428,"results":"50","hashOfConfig":"27"},{"size":1163,"mtime":1596297614058,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"v7632e",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"54"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"54"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"54"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"54"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"/home/masato/game-work/switcher-front/src/index.js",[],["107","108"],"/home/masato/game-work/switcher-front/src/App.js",[],"/home/masato/game-work/switcher-front/src/serviceWorker.js",[],"/home/masato/game-work/switcher-front/src/components/store/index.js",[],"/home/masato/game-work/switcher-front/src/components/Router.jsx",[],"/home/masato/game-work/switcher-front/src/components/store/user.reducer.js",[],"/home/masato/game-work/switcher-front/src/components/Start.jsx",[],"/home/masato/game-work/switcher-front/src/components/Login.jsx",["109","110"],"/home/masato/game-work/switcher-front/src/components/GameBoard.jsx",["111"],"/home/masato/game-work/switcher-front/src/components/levels/LevelOne.jsx",["112","113"],"/home/masato/game-work/switcher-front/src/components/levels/LevelThree.jsx",["114","115"],"import React, { useState, useEffect } from \"react\";\nimport style from \"./css/LevelThree.module.css\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { Button, Spinner, Container, Row, Col } from \"reactstrap\";\nimport Axios from \"axios\";\nimport { useDispatch } from \"react-redux\";\nimport { url } from \"../../urls\";\nimport { levelUp } from \"../store/actionCreators\";\nimport { Fade } from \"react-reveal\";\nimport ModalThree from \"./ModalThree\";\n\nexport default function LevelThree() {\n  const [user, setUser] = useState();\n  const [isLoading, setIsLoading] = useState(true);\n  // const [levelDone, setLevelDone] = useState(false);\n  const [isSolved, setisSolved] = useState(false);\n\n  //those states are in game states\n  const [switchOne, setswitchOne] = useState(false);\n  const [switchTwo, setswitchTwo] = useState(true);\n  const [switchThree, setswitchThree] = useState(false);\n  const [switchFour, setswitchFour] = useState(true);\n  const [switchFive, setswitchFive] = useState(false);\n  const [switchSix, setswitchSix] = useState(false);\n  const [switchSeven, setswitchSeven] = useState(false);\n  const [switchEight, setswitchEight] = useState(true);\n  const [switchNine, setswitchNine] = useState(false);\n  const [switchTen, setswitchTen] = useState(false);\n  const [switchEleven, setswitchEleven] = useState(false);\n  const [switchTwelve, setswitchTwelve] = useState(true);\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const level = sessionStorage.getItem(\"level\");\n\n  const levelId = 3;\n  const uuid = sessionStorage.getItem(\"uuid\");\n  // const levelStored = localStorage.getItem(\"level\");\n\n  const getUser = async () => {\n    try {\n      setIsLoading(true);\n      const res = await Axios.get(`${url}/users/${uuid}`);\n      setUser(res.data);\n      setIsLoading(false);\n    } catch (error) {\n      alert(\"Problems!\");\n    }\n  };\n\n  useEffect(() => {\n    getUser();\n  }, []);\n\n  const goLevelUp = async () => {\n    try {\n      await dispatch(levelUp());\n      getUser();\n      history.push(\"/game-board\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const switchOneTrick = () => {\n    setswitchOne(!switchOne);\n    setswitchNine(!switchNine);\n  };\n\n  const switchTwoTrick = () => {\n    setswitchOne(!switchOne);\n    setswitchTwo(!switchTwo);\n    setswitchFour(!switchFour);\n    setswitchSeven(!switchSeven);\n  };\n\n  const switchThreeTrick = () => {\n    setswitchOne(!switchOne);\n    setswitchThree(!switchThree);\n    setswitchFour(!switchFour);\n    setswitchEight(!switchEight);\n  };\n\n  const switchFourTrick = () => {\n    setswitchFour(!switchFour);\n    setswitchNine(!switchNine);\n  };\n\n  const switchFiveTrick = () => {\n    setswitchFive(!switchFive);\n    setswitchEight(!switchEight);\n  };\n\n  const switchSixTrick = () => {\n    setswitchTwo(!switchTwo);\n    setswitchSix(!switchSix);\n    setswitchSeven(!switchSeven);\n  };\n\n  const switchSevenTrick = () => {\n    setswitchSeven(!switchSeven);\n    setswitchFour(!switchFour);\n  };\n\n  const switchEightTrick = () => {\n    setswitchEight(!switchEight);\n  };\n\n  const switchNineTrick = () => {\n    setswitchOne(!switchOne);\n    setswitchTwo(!switchTwo);\n    setswitchThree(!switchThree);\n    setswitchFour(!switchFour);\n    setswitchFive(!switchFive);\n    setswitchSix(!switchSix);\n    setswitchSeven(!switchSeven);\n    setswitchEight(!switchEight);\n    setswitchNine(!switchNine);\n    setswitchTen(!switchTen);\n    setswitchEleven(!switchEleven);\n    setswitchTwelve(!switchTwelve);\n  };\n\n  const switchTenTrick = () => {\n    setswitchThree(!switchThree);\n    setswitchFour(!switchFour);\n    setswitchFive(!switchFive);\n    setswitchEight(!switchEight);\n    setswitchTen(!switchTen);\n    setswitchEleven(!switchEleven);\n  };\n\n  const switchElevenTrick = () => {\n    setswitchOne(!switchOne);\n    setswitchThree(!switchThree);\n    setswitchFive(!switchFive);\n    setswitchSeven(!switchSeven);\n    setswitchNine(!switchNine);\n    setswitchEleven(!switchEleven);\n  };\n\n  const switchTwelveTrick = () => {\n    setswitchFive(!switchFive);\n    setswitchFour(!switchFour);\n    setswitchSeven(!switchSeven);\n    setswitchEight(!switchEight);\n    setswitchTwelve(!switchTwelve);\n  };\n\n  if (\n    switchOne &&\n    switchTwo &&\n    switchThree &&\n    switchFour &&\n    switchFive &&\n    switchSix &&\n    switchSeven &&\n    switchEight &&\n    switchNine &&\n    switchTen &&\n    switchEleven &&\n    switchTwelve\n  ) {\n    setTimeout(() => {\n      setisSolved(true);\n    }, 1000);\n  }\n\n  if (isSolved) {\n    return (\n      <div>\n        {level > levelId ? (\n          <Fade>\n            <h1 style={{ marginTop: \"40vh\" }}>\n              CONGRATULATION you did it again!\n            </h1>\n            <h3>Lights are out!</h3>\n            <Link to=\"/game-board\">\n              <Button color=\"success\">Back to dashboard</Button>\n            </Link>\n          </Fade>\n        ) : (\n          <Fade>\n            <h1 style={{ marginTop: \"40vh\" }}>CONGRATULATION!</h1>\n            <h3>Lights are out!</h3>\n            <Button color=\"success\" onClick={() => goLevelUp()}>\n              Back to dashboard\n            </Button>\n          </Fade>\n        )}\n      </div>\n    );\n  }\n\n  if (isLoading) {\n    return <Spinner />;\n  }\n  return (\n    <Container fluid className={style.wrapper}>\n      <Row>\n        <Col>\n          <Link to=\"/game-board\">\n            <Button outline block>\n              Back to dashboard\n            </Button>\n          </Link>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <ModalThree />\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <h1 style={{ color: \"black\" }}>Level 3</h1>\n        </Col>\n      </Row>\n      <Row className={style.switchDiv}>\n        <Col lg={{ size: 4 }} md={{ size: 4 }} sm={{ size: 4 }}>\n          <Col>\n            <label className={style.rocker}>\n              <input\n                className={style.switch}\n                type=\"checkbox\"\n                checked={switchOne}\n                onChange={switchOneTrick}\n              />\n              <span className={style.switchLeft}>ON</span>\n              <span className={style.switchRight}>OFF</span>\n            </label>\n          </Col>\n          <Col>\n            <label className={style.rocker}>\n              <input\n                className={style.switch}\n                type=\"checkbox\"\n                checked={switchTwo}\n                onChange={() => switchTwoTrick()}\n              />\n              <span className={style.switchLeft}>ON</span>\n              <span className={style.switchRight}>OFF</span>\n            </label>\n          </Col>\n          <Col>\n            <label className={style.rocker}>\n              <input\n                className={style.switch}\n                type=\"checkbox\"\n                checked={switchThree}\n                onChange={() => switchThreeTrick()}\n              />\n              <span className={style.switchLeft}>ON</span>\n              <span className={style.switchRight}>OFF</span>\n            </label>\n          </Col>\n          <Col>\n            <label className={style.rocker}>\n              <input\n                className={style.switch}\n                type=\"checkbox\"\n                checked={switchFour}\n                onChange={() => switchFourTrick()}\n              />\n              <span className={style.switchLeft}>ON</span>\n              <span className={style.switchRight}>OFF</span>\n            </label>\n          </Col>\n        </Col>\n        <Col lg={{ size: 4 }} md={{ size: 4 }} sm={{ size: 4 }}>\n          <Col>\n            <label className={style.rocker}>\n              <input\n                className={style.switch}\n                type=\"checkbox\"\n                checked={switchFive}\n                onChange={() => switchFiveTrick()}\n              />\n              <span className={style.switchLeft}>ON</span>\n              <span className={style.switchRight}>OFF</span>\n            </label>\n          </Col>\n          <Col>\n            <label className={style.rocker}>\n              <input\n                className={style.switch}\n                type=\"checkbox\"\n                checked={switchSix}\n                onChange={() => switchSixTrick()}\n              />\n              <span className={style.switchLeft}>ON</span>\n              <span className={style.switchRight}>OFF</span>\n            </label>\n          </Col>\n          <Col>\n            <label className={style.rocker}>\n              <input\n                className={style.switch}\n                type=\"checkbox\"\n                checked={switchSeven}\n                onChange={() => switchSevenTrick()}\n              />\n              <span className={style.switchLeft}>ON</span>\n              <span className={style.switchRight}>OFF</span>\n            </label>\n          </Col>\n          <Col>\n            <label className={style.rocker}>\n              <input\n                className={style.switch}\n                type=\"checkbox\"\n                checked={switchEight}\n                onChange={() => switchEightTrick()}\n              />\n              <span className={style.switchLeft}>ON</span>\n              <span className={style.switchRight}>OFF</span>\n            </label>\n          </Col>\n        </Col>\n        <Col lg={{ size: 4 }} md={{ size: 4 }} sm={{ size: 4 }}>\n          <Col>\n            <label className={style.rocker}>\n              <input\n                className={style.switch}\n                type=\"checkbox\"\n                checked={switchNine}\n                onChange={() => switchNineTrick()}\n              />\n              <span className={style.switchLeft}>ON</span>\n              <span className={style.switchRight}>OFF</span>\n            </label>\n          </Col>\n          <Col>\n            <label className={style.rocker}>\n              <input\n                className={style.switch}\n                type=\"checkbox\"\n                checked={switchTen}\n                onChange={() => switchTenTrick()}\n              />\n              <span className={style.switchLeft}>ON</span>\n              <span className={style.switchRight}>OFF</span>\n            </label>\n          </Col>\n          <Col>\n            <label className={style.rocker}>\n              <input\n                className={style.switch}\n                type=\"checkbox\"\n                checked={switchEleven}\n                onChange={() => switchElevenTrick()}\n              />\n              <span className={style.switchLeft}>ON</span>\n              <span className={style.switchRight}>OFF</span>\n            </label>\n          </Col>\n          <Col>\n            <label className={style.rocker}>\n              <input\n                className={style.switch}\n                type=\"checkbox\"\n                checked={switchTwelve}\n                onChange={() => switchTwelveTrick()}\n              />\n              <span className={style.switchLeft}>ON</span>\n              <span className={style.switchRight}>OFF</span>\n            </label>\n          </Col>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n","/home/masato/game-work/switcher-front/src/components/levels/LevelTwo.jsx",["116","117"],"import React, { useState, useEffect } from \"react\";\nimport style from \"./css/LevelTwo.module.css\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { Button, Spinner, Container, Row, Col } from \"reactstrap\";\nimport Axios from \"axios\";\nimport { useDispatch } from \"react-redux\";\nimport { url } from \"../../urls\";\nimport { levelUp } from \"../store/actionCreators\";\nimport ModalTwo from \"./ModalTwo\";\nimport { Fade } from \"react-reveal\";\n\nexport default function LevelTwo() {\n  const [user, setUser] = useState();\n  const [isLoading, setIsLoading] = useState(true);\n  // const [levelDone, setLevelDone] = useState(false);\n  const [isSolved, setisSolved] = useState(false);\n\n  //those states are in game states\n  const [switchOne, setswitchOne] = useState(false);\n  const [switchTwo, setswitchTwo] = useState(false);\n  const [switchThree, setswitchThree] = useState(false);\n  const [switchFour, setswitchFour] = useState(true);\n  const [switchFive, setswitchFive] = useState(true);\n  const [switchSix, setswitchSix] = useState(true);\n  const [switchSeven, setswitchSeven] = useState(false);\n  const [switchEight, setswitchEight] = useState(false);\n  const [switchNine, setswitchNine] = useState(false);\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const level = sessionStorage.getItem(\"level\");\n\n  const levelId = 2;\n  const uuid = sessionStorage.getItem(\"uuid\");\n  // const levelStored = localStorage.getItem(\"level\");\n\n  const getUser = async () => {\n    try {\n      setIsLoading(true);\n      const res = await Axios.get(`${url}/users/${uuid}`);\n      setUser(res.data);\n      setIsLoading(false);\n    } catch (error) {\n      alert(\"Problems!\");\n    }\n  };\n\n  useEffect(() => {\n    getUser();\n  }, []);\n\n  const goLevelUp = async () => {\n    try {\n      await dispatch(levelUp());\n      getUser();\n      history.push(\"/game-board\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const switchOneTrick = () => {\n    setswitchOne(!switchOne);\n    setswitchNine(!switchNine);\n  };\n\n  const switchTwoTrick = () => {\n    setswitchOne(!switchOne);\n    setswitchTwo(!switchTwo);\n    setswitchFour(!switchFour);\n    setswitchSeven(!switchSeven);\n  };\n\n  const switchThreeTrick = () => {\n    setswitchOne(!switchOne);\n    setswitchThree(!switchThree);\n    setswitchFour(!switchFour);\n  };\n\n  const switchFourTrick = () => {\n    setswitchThree(!switchThree);\n    setswitchFour(!switchFour);\n    setswitchNine(!switchNine);\n  };\n\n  const switchFiveTrick = () => {\n    setswitchFive(!switchFive);\n    setswitchEight(!switchEight);\n  };\n\n  const switchSixTrick = () => {\n    setswitchTwo(!switchTwo);\n    setswitchSix(!switchSix);\n    setswitchSeven(!switchSeven);\n  };\n\n  const switchSevenTrick = () => {\n    setswitchSeven(!switchSeven);\n    setswitchFour(!switchFour);\n  };\n\n  const switchEightTrick = () => {\n    setswitchEight(!switchEight);\n  };\n\n  const switchNineTrick = () => {\n    setswitchOne(!switchOne);\n    setswitchTwo(!switchTwo);\n    setswitchThree(!switchThree);\n    setswitchFour(!switchFour);\n    setswitchFive(!switchFive);\n    setswitchSix(!switchSix);\n    setswitchSeven(!switchSeven);\n    setswitchEight(!switchEight);\n    setswitchNine(!switchNine);\n  };\n\n  if (\n    !switchOne &&\n    !switchTwo &&\n    !switchThree &&\n    !switchFour &&\n    !switchFive &&\n    !switchSix &&\n    !switchSeven &&\n    !switchEight &&\n    !switchNine\n  ) {\n    setTimeout(() => {\n      setisSolved(true);\n    }, 1000);\n  }\n\n  if (isSolved) {\n    return (\n      <div>\n        {level > levelId ? (\n          <Fade>\n            <h1 style={{ marginTop: \"40vh\" }}>\n              CONGRATULATION you did it again!\n            </h1>\n            <h3>Lights are out!</h3>\n            <Link to=\"/game-board\">\n              <Button color=\"success\">Back to dashboard</Button>\n            </Link>\n          </Fade>\n        ) : (\n          <Fade>\n            <h1 style={{ marginTop: \"40vh\" }}>CONGRATULATION!</h1>\n            <h3>Lights are out!</h3>\n            <Button color=\"success\" onClick={() => goLevelUp()}>\n              Back to dashboard\n            </Button>\n          </Fade>\n        )}\n      </div>\n    );\n  }\n\n  if (isLoading) {\n    return <Spinner />;\n  }\n  return (\n    <Container fluid className={style.wrapper1}>\n      <Row>\n        <Col>\n          <Link to=\"/game-board\">\n            <Button outline block>\n              Back to dashboard\n            </Button>\n          </Link>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <ModalTwo />\n          <h1 style={{ color: \"black\" }}>Level 2</h1>\n        </Col>\n      </Row>\n      <Row className={style.switchDiv}>\n        <Col lg={{ size: 4 }} md={{ size: 4 }} sm={{ size: 4 }}>\n          <Col>\n            <label className={style.label}>\n              <div className={style.toggle}>\n                <input\n                  className={style.toggleState}\n                  type=\"checkbox\"\n                  checked={switchOne}\n                  onChange={switchOneTrick}\n                />\n                <div className={style.indicator}></div>\n              </div>\n            </label>\n          </Col>\n          <Col>\n            <label className={style.label}>\n              <div className={style.toggle}>\n                <input\n                  className={style.toggleState}\n                  type=\"checkbox\"\n                  checked={switchTwo}\n                  onChange={() => switchTwoTrick()}\n                />\n                <div className={style.indicator}></div>\n              </div>\n            </label>\n          </Col>\n          <Col>\n            <label className={style.label}>\n              <div className={style.toggle}>\n                <input\n                  className={style.toggleState}\n                  type=\"checkbox\"\n                  checked={switchThree}\n                  onChange={() => switchThreeTrick()}\n                />\n                <div className={style.indicator}></div>\n              </div>\n            </label>\n          </Col>\n        </Col>\n        <Col lg={{ size: 4 }} md={{ size: 4 }} sm={{ size: 4 }}>\n          <Col>\n            <label className={style.label}>\n              <div className={style.toggle}>\n                <input\n                  className={style.toggleState}\n                  type=\"checkbox\"\n                  checked={switchFour}\n                  onChange={() => switchFourTrick()}\n                />\n                <div className={style.indicator}></div>\n              </div>\n            </label>\n          </Col>\n          <Col>\n            <label className={style.label}>\n              <div className={style.toggle}>\n                <input\n                  className={style.toggleState}\n                  type=\"checkbox\"\n                  checked={switchFive}\n                  onChange={() => switchFiveTrick()}\n                />\n                <div className={style.indicator}></div>\n              </div>\n            </label>\n          </Col>\n          <Col>\n            <label className={style.label}>\n              <div className={style.toggle}>\n                <input\n                  className={style.toggleState}\n                  type=\"checkbox\"\n                  checked={switchSix}\n                  onChange={() => switchSixTrick()}\n                />\n                <div className={style.indicator}></div>\n              </div>\n            </label>\n          </Col>\n        </Col>\n        <Col lg={{ size: 4 }} md={{ size: 4 }} sm={{ size: 4 }}>\n          <Col>\n            <label className={style.label}>\n              <div className={style.toggle}>\n                <input\n                  className={style.toggleState}\n                  type=\"checkbox\"\n                  checked={switchSeven}\n                  onChange={() => switchSevenTrick()}\n                />\n                <div className={style.indicator}></div>\n              </div>\n            </label>\n          </Col>\n          <Col>\n            <label className={style.label}>\n              <div className={style.toggle}>\n                <input\n                  className={style.toggleState}\n                  type=\"checkbox\"\n                  checked={switchEight}\n                  onChange={() => switchEightTrick()}\n                />\n                <div className={style.indicator}></div>\n              </div>\n            </label>\n          </Col>\n          <Col>\n            <label className={style.label}>\n              <div className={style.toggle}>\n                <input\n                  className={style.toggleState}\n                  type=\"checkbox\"\n                  checked={switchNine}\n                  onChange={() => switchNineTrick()}\n                />\n                <div className={style.indicator}></div>\n              </div>\n            </label>\n          </Col>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n","/home/masato/game-work/switcher-front/src/components/levels/LevelFour.jsx",["118"],"import React, { useState, useEffect } from \"react\";\nimport style from \"./css/LevelFour.module.css\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { Button, Spinner, Container, Row, Col } from \"reactstrap\";\nimport Axios from \"axios\";\nimport { useDispatch } from \"react-redux\";\nimport { url } from \"../../urls\";\nimport { levelUp } from \"../store/actionCreators\";\nimport { Fade } from \"react-reveal\";\nimport smiley from \"./img/smiley-surprised-100x100.png\";\nimport ModalFour from \"./ModalFour\";\n\nexport default function LevelFour() {\n  const [user, setUser] = useState();\n  const [isLoading, setIsLoading] = useState(true);\n  // const [levelDone, setLevelDone] = useState(false);\n  const [isSolved, setisSolved] = useState(false);\n\n  //those states are in game states\n  const [switchOne, setswitchOne] = useState(false);\n  const [switchTwo, setswitchTwo] = useState(false);\n  const [switchThree, setswitchThree] = useState(true);\n  const [switchFour, setswitchFour] = useState(false);\n  const [switchFive, setswitchFive] = useState(true);\n  const [switchSix, setswitchSix] = useState(false);\n  const [switchSeven, setswitchSeven] = useState(false);\n  const [switchEight, setswitchEight] = useState(false);\n  const [switchNine, setswitchNine] = useState(false);\n  const [switchTen, setswitchTen] = useState(true);\n  const [switchEleven, setswitchEleven] = useState(true);\n  const [switchTwelve, setswitchTwelve] = useState(false);\n  const [switchThirteen, setswitchThirteen] = useState(true);\n  const [switchFourteen, setswitchFourteen] = useState(true);\n  const [switchFifteen, setswitchFifteen] = useState(true);\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const level = sessionStorage.getItem(\"level\");\n\n  const levelId = 4;\n  const uuid = sessionStorage.getItem(\"uuid\");\n  // const levelStored = localStorage.getItem(\"level\");\n\n  const getUser = async () => {\n    try {\n      setIsLoading(true);\n      const res = await Axios.get(`${url}/users/${uuid}`);\n      setUser(res.data);\n      setIsLoading(false);\n    } catch (error) {\n      alert(\"Problems!\");\n    }\n  };\n\n  useEffect(() => {\n    getUser();\n  }, []);\n\n  const goLevelUp = async () => {\n    try {\n      await dispatch(levelUp());\n      getUser();\n      history.push(\"/game-board\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const switchOneTrick = () => {\n    setswitchOne(!switchOne);\n    setswitchNine(!switchNine);\n  };\n\n  const switchTwoTrick = () => {\n    setswitchOne(!switchOne);\n    setswitchTwo(!switchTwo);\n    setswitchFour(!switchFour);\n    setswitchSeven(!switchSeven);\n  };\n\n  const switchThreeTrick = () => {\n    setswitchOne(!switchOne);\n    setswitchThree(!switchThree);\n    setswitchFour(!switchFour);\n    setswitchEight(!switchEight);\n  };\n\n  const switchFourTrick = () => {\n    setswitchFour(!switchFour);\n    setswitchSix(!switchSix);\n  };\n\n  const switchFiveTrick = () => {\n    setswitchFive(!switchFive);\n    setswitchNine(!switchNine);\n  };\n\n  const switchSixTrick = () => {\n    setswitchSix(!switchSix);\n    setswitchSeven(!switchSeven);\n    setswitchEight(!switchEight);\n  };\n\n  const switchSevenTrick = () => {\n    setswitchSeven(!switchSeven);\n    setswitchFourteen(!switchFourteen);\n  };\n\n  const switchEightTrick = () => {\n    setswitchEight(!switchEight);\n    setswitchSeven(!switchSeven);\n  };\n\n  const switchNineTrick = () => {\n    setswitchOne(!switchOne);\n    setswitchFive(!switchFive);\n    setswitchNine(!switchNine);\n    setswitchEleven(!switchEleven);\n    setswitchFifteen(!switchFifteen);\n  };\n\n  const switchTenTrick = () => {\n    setswitchThree(!switchThree);\n    setswitchFour(!switchFour);\n    setswitchFive(!switchFive);\n    setswitchEight(!switchEight);\n    setswitchTen(!switchTen);\n    setswitchEleven(!switchEleven);\n  };\n\n  const switchElevenTrick = () => {\n    setswitchOne(!switchOne);\n    setswitchThree(!switchThree);\n    setswitchFive(!switchFive);\n    setswitchSeven(!switchSeven);\n    setswitchNine(!switchNine);\n    setswitchEleven(!switchEleven);\n  };\n\n  const switchTwelveTrick = () => {\n    setswitchFive(!switchFive);\n    setswitchFour(!switchFour);\n    setswitchSeven(!switchSeven);\n    setswitchEight(!switchEight);\n    setswitchTwelve(!switchTwelve);\n  };\n\n  const switchThirteenTrick = () => {\n    setswitchFive(!switchFive);\n    setswitchSeven(!switchSeven);\n    setswitchEight(!switchEight);\n    setswitchThirteen(!switchThirteen);\n  };\n\n  const switchFourteenTrick = () => {\n    setswitchOne(!switchOne);\n    setswitchTwelve(!switchTwelve);\n    setswitchFourteen(!switchFourteen);\n  };\n\n  const switchFifteenTrick = () => {\n    setswitchTwo(!switchTwo);\n    setswitchSeven(!switchSeven);\n    setswitchFourteen(!switchFourteen);\n    setswitchFifteen(!switchFifteen);\n  };\n\n  if (\n    switchOne &&\n    switchTwo &&\n    switchThree &&\n    switchFour &&\n    switchFive &&\n    switchSix &&\n    switchSeven &&\n    switchEight &&\n    switchNine &&\n    switchTen &&\n    switchEleven &&\n    switchTwelve &&\n    switchThirteen &&\n    switchFourteen &&\n    switchFifteen\n  ) {\n    setTimeout(() => {\n      setisSolved(true);\n    }, 1000);\n  }\n\n  if (isSolved) {\n    return (\n      <div>\n        {level > levelId ? (\n          <Fade>\n            <h1 style={{ marginTop: \"40vh\" }}>\n              CONGRATULATION you did it again!\n            </h1>\n            <h3>Lights are out!</h3>\n            <Link to=\"/game-board\">\n              <Button color=\"success\">Back to dashboard</Button>\n            </Link>\n          </Fade>\n        ) : (\n          <Fade>\n            <h1 style={{ marginTop: \"40vh\" }}>WOOOOW! FANTASTIC! </h1>\n            <img src={smiley} alt=\"smiley\" />\n            <h3>Lights are out!</h3>\n            <Button color=\"success\" onClick={() => goLevelUp()}>\n              Back to dashboard\n            </Button>\n          </Fade>\n        )}\n      </div>\n    );\n  }\n\n  if (isLoading) {\n    return <Spinner />;\n  }\n  return (\n    <Container fluid className={style.wrapper}>\n      <Row>\n        <Col>\n          <Link to=\"/game-board\">\n            <Button outline block>\n              Back to dashboard\n            </Button>\n          </Link>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <ModalFour user={user} />\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <h1 style={{ color: \"black\" }}>Level 4</h1>\n        </Col>\n      </Row>\n      <Row className={style.switchDiv}>\n        {/* Col one */}\n        <Col lg={{ size: 4 }} md={{ size: 4 }} sm={{ size: 4 }}>\n          <Col style={{ marginTop: \"5vh\", marginBottom: \"5vh\" }}>\n            <input\n              checked={switchOne}\n              onChange={switchOneTrick}\n              type=\"checkbox\"\n              className={style.switch}\n            />\n          </Col>\n          <Col style={{ marginTop: \"5vh\", marginBottom: \"5vh\" }}>\n            <input\n              checked={switchTwo}\n              onChange={switchTwoTrick}\n              type=\"checkbox\"\n              className={style.switch}\n            />\n          </Col>\n          <Col style={{ marginTop: \"5vh\", marginBottom: \"5vh\" }}>\n            <input\n              checked={switchThree}\n              onChange={switchThreeTrick}\n              type=\"checkbox\"\n              className={style.switch}\n            />\n          </Col>\n          <Col style={{ marginTop: \"5vh\", marginBottom: \"5vh\" }}>\n            <input\n              checked={switchFour}\n              onChange={switchFourTrick}\n              type=\"checkbox\"\n              className={style.switch}\n            />\n          </Col>\n          <Col style={{ marginTop: \"5vh\", marginBottom: \"5vh\" }}>\n            <input\n              checked={switchFive}\n              onChange={switchFiveTrick}\n              type=\"checkbox\"\n              className={style.switch}\n            />\n          </Col>\n        </Col>\n        {/* Col 2 */}\n        <Col lg={{ size: 4 }} md={{ size: 4 }} sm={{ size: 4 }}>\n          <Col style={{ marginTop: \"5vh\", marginBottom: \"5vh\" }}>\n            <input\n              checked={switchSix}\n              onChange={switchSixTrick}\n              type=\"checkbox\"\n              className={style.switch}\n            />\n          </Col>\n          <Col style={{ marginTop: \"5vh\", marginBottom: \"5vh\" }}>\n            <input\n              checked={switchSeven}\n              onChange={switchSevenTrick}\n              type=\"checkbox\"\n              className={style.switch}\n            />\n          </Col>\n          <Col style={{ marginTop: \"5vh\", marginBottom: \"5vh\" }}>\n            <input\n              checked={switchEight}\n              onChange={switchEightTrick}\n              type=\"checkbox\"\n              className={style.switch}\n            />\n          </Col>\n          <Col style={{ marginTop: \"5vh\", marginBottom: \"5vh\" }}>\n            <input\n              checked={switchNine}\n              onChange={switchNineTrick}\n              type=\"checkbox\"\n              className={style.switch}\n            />\n          </Col>\n          <Col style={{ marginTop: \"5vh\", marginBottom: \"5vh\" }}>\n            <input\n              checked={switchTen}\n              onChange={switchTenTrick}\n              type=\"checkbox\"\n              className={style.switch}\n            />\n          </Col>\n        </Col>\n        {/* Col 3 */}\n        <Col lg={{ size: 4 }} md={{ size: 4 }} sm={{ size: 4 }}>\n          <Col style={{ marginTop: \"5vh\", marginBottom: \"5vh\" }}>\n            <input\n              checked={switchEleven}\n              onChange={switchElevenTrick}\n              type=\"checkbox\"\n              className={style.switch}\n            />\n          </Col>\n          <Col style={{ marginTop: \"5vh\", marginBottom: \"5vh\" }}>\n            <input\n              checked={switchTwelve}\n              onChange={switchTwelveTrick}\n              type=\"checkbox\"\n              className={style.switch}\n            />\n          </Col>\n          <Col style={{ marginTop: \"5vh\", marginBottom: \"5vh\" }}>\n            <input\n              checked={switchThirteen}\n              onChange={switchThirteenTrick}\n              type=\"checkbox\"\n              className={style.switch}\n            />\n          </Col>\n          <Col style={{ marginTop: \"5vh\", marginBottom: \"5vh\" }}>\n            <input\n              checked={switchFourteen}\n              onChange={switchFourteenTrick}\n              type=\"checkbox\"\n              className={style.switch}\n            />\n          </Col>\n          <Col style={{ marginTop: \"5vh\", marginBottom: \"5vh\" }}>\n            <input\n              checked={switchFifteen}\n              onChange={switchFifteenTrick}\n              type=\"checkbox\"\n              className={style.switch}\n            />\n          </Col>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n","/home/masato/game-work/switcher-front/src/components/levels/LevelFive.jsx",["119"],"import React, { useState, useEffect } from \"react\";\nimport style from \"./css/LevelFive.module.scss\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { Button, Spinner, Container, Row, Col } from \"reactstrap\";\nimport Axios from \"axios\";\nimport { useDispatch } from \"react-redux\";\nimport { url } from \"../../urls\";\nimport { levelUp } from \"../store/actionCreators\";\nimport { Fade } from \"react-reveal\";\nimport smileyFck from \"./img/fckingShocked.png\";\nimport ModalFive from \"./ModalFive\";\n\nexport default function LevelFive() {\n  const [user, setUser] = useState();\n  const [isLoading, setIsLoading] = useState(true);\n  // const [levelDone, setLevelDone] = useState(false);\n  const [isSolved, setisSolved] = useState(false);\n\n  //those states are in game states\n  const [switchOne, setswitchOne] = useState(false);\n  const [switchTwo, setswitchTwo] = useState(false);\n  const [switchThree, setswitchThree] = useState(true);\n  const [switchFour, setswitchFour] = useState(false);\n  const [switchFive, setswitchFive] = useState(true);\n  const [switchSix, setswitchSix] = useState(false);\n  const [switchSeven, setswitchSeven] = useState(false);\n  const [switchEight, setswitchEight] = useState(false);\n  const [switchNine, setswitchNine] = useState(false);\n  const [switchTen, setswitchTen] = useState(true);\n  const [switchEleven, setswitchEleven] = useState(true);\n  const [switchTwelve, setswitchTwelve] = useState(false);\n  const [switchThirteen, setswitchThirteen] = useState(true);\n  const [switchFourteen, setswitchFourteen] = useState(true);\n  const [switchFifteen, setswitchFifteen] = useState(true);\n  const [switchSixteen, setswitchSixteen] = useState(true);\n  const [switchSeventeen, setswitchSeventeen] = useState(true);\n  const [switchEighteen, setswitchEighteen] = useState(true);\n\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const level = sessionStorage.getItem(\"level\");\n\n  const levelId = 5;\n  const uuid = sessionStorage.getItem(\"uuid\");\n  // const levelStored = localStorage.getItem(\"level\");\n\n  const getUser = async () => {\n    try {\n      setIsLoading(true);\n      const res = await Axios.get(`${url}/users/${uuid}`);\n      setUser(res.data);\n      setIsLoading(false);\n    } catch (error) {\n      alert(error);\n    }\n  };\n\n  useEffect(() => {\n    getUser();\n  }, []);\n\n  const goLevelUp = async () => {\n    try {\n      await dispatch(levelUp());\n      getUser();\n      history.push(\"/game-board\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const switchOneTrick = () => {\n    setswitchOne(!switchOne);\n    setswitchNine(!switchNine);\n  };\n\n  const switchTwoTrick = () => {\n    setswitchTwo(!switchTwo);\n    setswitchFour(!switchFour);\n    setswitchSeven(!switchSeven);\n  };\n\n  const switchThreeTrick = () => {\n    setswitchThree(!switchThree);\n    setswitchEighteen(!switchEighteen);\n  };\n\n  const switchFourTrick = () => {\n    setswitchFour(!switchFour);\n    setswitchFifteen(!switchFifteen);\n  };\n\n  const switchFiveTrick = () => {\n    setswitchFive(!switchFive);\n    setswitchEight(!switchEight);\n    setswitchSeventeen(!switchSeventeen);\n  };\n\n  const switchSixTrick = () => {\n    setswitchSix(!switchSix);\n    setswitchSeven(!switchSeven);\n    setswitchEight(!switchEight);\n  };\n\n  const switchSevenTrick = () => {\n    setswitchSeven(!switchSeven);\n    setswitchFourteen(!switchFourteen);\n  };\n\n  const switchEightTrick = () => {\n    setswitchEight(!switchEight);\n    setswitchSeven(!switchSeven);\n  };\n\n  const switchNineTrick = () => {\n    setswitchOne(!switchOne);\n    setswitchThree(!switchThree);\n    setswitchFive(!switchFive);\n    setswitchSeven(!switchSeven);\n    setswitchNine(!switchNine);\n    setswitchEleven(!switchEleven);\n    setswitchThirteen(!switchThirteen);\n    setswitchFifteen(!switchFifteen);\n    setswitchSeventeen(!switchSeventeen);\n  };\n\n  const switchTenTrick = () => {\n    setswitchThree(!switchThree);\n    setswitchEight(!switchEight);\n    setswitchTen(!switchTen);\n    setswitchEleven(!switchEleven);\n  };\n\n  const switchElevenTrick = () => {\n    setswitchOne(!switchOne);\n    setswitchThree(!switchThree);\n    setswitchFive(!switchFive);\n    setswitchNine(!switchNine);\n    setswitchEleven(!switchEleven);\n  };\n\n  const switchTwelveTrick = () => {\n    setswitchFive(!switchFive);\n    setswitchSeven(!switchSeven);\n    setswitchTwelve(!switchTwelve);\n  };\n\n  const switchThirteenTrick = () => {\n    setswitchFive(!switchFive);\n    setswitchSeven(!switchSeven);\n    setswitchEight(!switchEight);\n    setswitchThirteen(!switchThirteen);\n  };\n\n  const switchFourteenTrick = () => {\n    setswitchThree(!switchThree);\n    setswitchFive(!switchFive);\n    setswitchFourteen(!switchFourteen);\n  };\n\n  const switchFifteenTrick = () => {\n    setswitchTwo(!switchTwo);\n    setswitchFourteen(!switchFourteen);\n    setswitchFifteen(!switchFifteen);\n  };\n\n  const switchSixteenTrick = () => {\n    setswitchOne(!switchOne);\n    setswitchSeven(!switchSeven);\n    setswitchSixteen(!switchSixteen);\n  };\n\n  const switchSeventeenTrick = () => {\n    setswitchEight(!switchEight);\n    setswitchSeventeen(!switchSeventeen);\n  };\n\n  const switchEightteenTrick = () => {\n    setswitchTwo(!switchTwo);\n    setswitchEighteen(!switchEighteen);\n  };\n\n  if (\n    switchOne &&\n    switchTwo &&\n    switchThree &&\n    switchFour &&\n    switchFive &&\n    switchSix &&\n    switchSeven &&\n    switchEight &&\n    switchNine &&\n    switchTen &&\n    switchEleven &&\n    switchTwelve &&\n    switchThirteen &&\n    switchFourteen &&\n    switchFifteen &&\n    switchSixteen &&\n    switchSeventeen &&\n    switchEighteen\n  ) {\n    setTimeout(() => {\n      setisSolved(true);\n    }, 1000);\n  }\n\n  if (isSolved) {\n    return (\n      <div>\n        {level > levelId ? (\n          <Fade>\n            <h1 style={{ marginTop: \"40vh\" }}>\n              CONGRATULATION you did it again!\n            </h1>\n            <h3>Lights are out!</h3>\n            <Link to=\"/game-board\">\n              <Button color=\"success\">Back to dashboard</Button>\n            </Link>\n          </Fade>\n        ) : (\n          <Fade>\n            <h1 style={{ marginTop: \"40vh\" }}>\n              You are the Switcher! No doubt about it!!!{\" \"}\n            </h1>\n            <img src={smileyFck} alt=\"smiley\" />\n            <img src={smileyFck} alt=\"smiley\" />\n            <img src={smileyFck} alt=\"smiley\" />\n            <h3>NeoCity is shining!</h3>\n            <Button color=\"success\" onClick={() => goLevelUp()}>\n              Back to dashboard\n            </Button>\n          </Fade>\n        )}\n      </div>\n    );\n  }\n\n  if (isLoading) {\n    return <Spinner />;\n  }\n  return (\n    <Container fluid className={style.wrapper}>\n      <Row>\n        <Col>\n          <Link to=\"/game-board\">\n            <Button outline block>\n              Back to dashboard\n            </Button>\n          </Link>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <ModalFive user={user} />\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <h1 className={style.finalTitle}>FINAL LEVEL</h1>\n        </Col>\n      </Row>\n      <Row className={style.switchDiv}>\n        {/* Col one */}\n        <Col lg={{ size: 2 }} md={{ size: 2 }} sm={{ size: 2 }}>\n          <Col style={{ marginTop: \"5vh\", marginBottom: \"5vh\" }}>\n            <div className={style.powerSwitch}>\n              <input\n                type=\"checkbox\"\n                checked={switchOne}\n                onChange={switchOneTrick}\n              />\n              <div className={style.button}>\n                <svg class={style.powerOff}>\n                  <use xlinkHref=\"#line\" className={style.line} />\n                  <use xlinkHref=\"#circle\" className={style.circle} />\n                </svg>\n                <svg className={style.powerOn}>\n                  <use xlinkHref=\"#line\" className={style.line} />\n                  <use xlinkHref=\"#circle\" className={style.circle} />\n                </svg>\n              </div>\n            </div>\n            {/* svg use for every checkbox  */}\n            <svg xmlns=\"http://www.w3.org/2000/svg\" style={{ display: \"none\" }}>\n              <symbol\n                xmlns=\"http://www.w3.org/2000/svg\"\n                viewBox=\"0 0 150 150\"\n                id={\"line\"}\n              >\n                <line x1=\"75\" y1=\"34\" x2=\"75\" y2=\"58\" />\n              </symbol>\n              <symbol\n                xmlns=\"http://www.w3.org/2000/svg\"\n                viewBox=\"0 0 150 150\"\n                id={\"circle\"}\n              >\n                <circle cx=\"75\" cy=\"80\" r=\"35\" />\n              </symbol>\n            </svg>\n          </Col>\n          <Col style={{ marginTop: \"5vh\", marginBottom: \"5vh\" }}>\n            <div className={style.powerSwitch}>\n              <input\n                type=\"checkbox\"\n                checked={switchTwo}\n                onChange={switchTwoTrick}\n              />\n              <div className={style.button}>\n                <svg class={style.powerOff}>\n                  <use xlinkHref=\"#line\" className={style.line} />\n                  <use xlinkHref=\"#circle\" className={style.circle} />\n                </svg>\n                <svg className={style.powerOn}>\n                  <use xlinkHref=\"#line\" className={style.line} />\n                  <use xlinkHref=\"#circle\" className={style.circle} />\n                </svg>\n              </div>\n            </div>\n          </Col>\n          <Col style={{ marginTop: \"5vh\", marginBottom: \"5vh\" }}>\n            <div className={style.powerSwitch}>\n              <input\n                type=\"checkbox\"\n                checked={switchThree}\n                onChange={switchThreeTrick}\n              />\n              <div className={style.button}>\n                <svg class={style.powerOff}>\n                  <use xlinkHref=\"#line\" className={style.line} />\n                  <use xlinkHref=\"#circle\" className={style.circle} />\n                </svg>\n                <svg className={style.powerOn}>\n                  <use xlinkHref=\"#line\" className={style.line} />\n                  <use xlinkHref=\"#circle\" className={style.circle} />\n                </svg>\n              </div>\n            </div>\n          </Col>\n        </Col>\n        {/* Col 2 */}\n        <Col lg={{ size: 2 }} md={{ size: 2 }} sm={{ size: 2 }}>\n          <Col style={{ marginTop: \"5vh\", marginBottom: \"5vh\" }}>\n            <div className={style.powerSwitch}>\n              <input\n                type=\"checkbox\"\n                checked={switchFour}\n                onChange={switchFourTrick}\n              />\n              <div className={style.button}>\n                <svg class={style.powerOff}>\n                  <use xlinkHref=\"#line\" className={style.line} />\n                  <use xlinkHref=\"#circle\" className={style.circle} />\n                </svg>\n                <svg className={style.powerOn}>\n                  <use xlinkHref=\"#line\" className={style.line} />\n                  <use xlinkHref=\"#circle\" className={style.circle} />\n                </svg>\n              </div>\n            </div>\n          </Col>\n          <Col style={{ marginTop: \"5vh\", marginBottom: \"5vh\" }}>\n            <div className={style.powerSwitch}>\n              <input\n                checked={switchFive}\n                onChange={switchFiveTrick}\n                type=\"checkbox\"\n                className={style.switch}\n              />\n              <div className={style.button}>\n                <svg class={style.powerOff}>\n                  <use xlinkHref=\"#line\" className={style.line} />\n                  <use xlinkHref=\"#circle\" className={style.circle} />\n                </svg>\n                <svg className={style.powerOn}>\n                  <use xlinkHref=\"#line\" className={style.line} />\n                  <use xlinkHref=\"#circle\" className={style.circle} />\n                </svg>\n              </div>\n            </div>\n          </Col>\n          <Col style={{ marginTop: \"5vh\", marginBottom: \"5vh\" }}>\n            <div className={style.powerSwitch}>\n              <input\n                checked={switchSix}\n                onChange={switchSixTrick}\n                type=\"checkbox\"\n                className={style.switch}\n              />\n              <div className={style.button}>\n                <svg class={style.powerOff}>\n                  <use xlinkHref=\"#line\" className={style.line} />\n                  <use xlinkHref=\"#circle\" className={style.circle} />\n                </svg>\n                <svg className={style.powerOn}>\n                  <use xlinkHref=\"#line\" className={style.line} />\n                  <use xlinkHref=\"#circle\" className={style.circle} />\n                </svg>\n              </div>\n            </div>\n          </Col>\n        </Col>\n        {/* Col 3 */}\n        <Col lg={{ size: 2 }} md={{ size: 2 }} sm={{ size: 2 }}>\n          <Col style={{ marginTop: \"5vh\", marginBottom: \"5vh\" }}>\n            <div className={style.powerSwitch}>\n              <input\n                checked={switchSeven}\n                onChange={switchSevenTrick}\n                type=\"checkbox\"\n                className={style.switch}\n              />\n              <div className={style.button}>\n                <svg class={style.powerOff}>\n                  <use xlinkHref=\"#line\" className={style.line} />\n                  <use xlinkHref=\"#circle\" className={style.circle} />\n                </svg>\n                <svg className={style.powerOn}>\n                  <use xlinkHref=\"#line\" className={style.line} />\n                  <use xlinkHref=\"#circle\" className={style.circle} />\n                </svg>\n              </div>\n            </div>\n          </Col>\n          <Col style={{ marginTop: \"5vh\", marginBottom: \"5vh\" }}>\n            <div className={style.powerSwitch}>\n              <input\n                checked={switchEight}\n                onChange={switchEightTrick}\n                type=\"checkbox\"\n                className={style.switch}\n              />\n              <div className={style.button}>\n                <svg class={style.powerOff}>\n                  <use xlinkHref=\"#line\" className={style.line} />\n                  <use xlinkHref=\"#circle\" className={style.circle} />\n                </svg>\n                <svg className={style.powerOn}>\n                  <use xlinkHref=\"#line\" className={style.line} />\n                  <use xlinkHref=\"#circle\" className={style.circle} />\n                </svg>\n              </div>\n            </div>\n          </Col>\n          <Col style={{ marginTop: \"5vh\", marginBottom: \"5vh\" }}>\n            <div className={style.powerSwitch}>\n              <input\n                checked={switchNine}\n                onChange={switchNineTrick}\n                type=\"checkbox\"\n                className={style.switch}\n              />\n              <div className={style.button}>\n                <svg class={style.powerOff}>\n                  <use xlinkHref=\"#line\" className={style.line} />\n                  <use xlinkHref=\"#circle\" className={style.circle} />\n                </svg>\n                <svg className={style.powerOn}>\n                  <use xlinkHref=\"#line\" className={style.line} />\n                  <use xlinkHref=\"#circle\" className={style.circle} />\n                </svg>\n              </div>\n            </div>\n          </Col>\n        </Col>\n        {/* Col 4 */}\n        <Col lg={{ size: 2 }} md={{ size: 2 }} sm={{ size: 2 }}>\n          <Col style={{ marginTop: \"5vh\", marginBottom: \"5vh\" }}>\n            <div className={style.powerSwitch}>\n              <input\n                checked={switchTen}\n                onChange={switchTenTrick}\n                type=\"checkbox\"\n                className={style.switch}\n              />\n              <div className={style.button}>\n                <svg class={style.powerOff}>\n                  <use xlinkHref=\"#line\" className={style.line} />\n                  <use xlinkHref=\"#circle\" className={style.circle} />\n                </svg>\n                <svg className={style.powerOn}>\n                  <use xlinkHref=\"#line\" className={style.line} />\n                  <use xlinkHref=\"#circle\" className={style.circle} />\n                </svg>\n              </div>\n            </div>\n          </Col>\n          <Col style={{ marginTop: \"5vh\", marginBottom: \"5vh\" }}>\n            <div className={style.powerSwitch}>\n              <input\n                checked={switchEleven}\n                onChange={switchElevenTrick}\n                type=\"checkbox\"\n                className={style.switch}\n              />\n              <div className={style.button}>\n                <svg class={style.powerOff}>\n                  <use xlinkHref=\"#line\" className={style.line} />\n                  <use xlinkHref=\"#circle\" className={style.circle} />\n                </svg>\n                <svg className={style.powerOn}>\n                  <use xlinkHref=\"#line\" className={style.line} />\n                  <use xlinkHref=\"#circle\" className={style.circle} />\n                </svg>\n              </div>\n            </div>\n          </Col>\n          <Col style={{ marginTop: \"5vh\", marginBottom: \"5vh\" }}>\n            <div className={style.powerSwitch}>\n              <input\n                checked={switchTwelve}\n                onChange={switchTwelveTrick}\n                type=\"checkbox\"\n                className={style.switch}\n              />\n              <div className={style.button}>\n                <svg class={style.powerOff}>\n                  <use xlinkHref=\"#line\" className={style.line} />\n                  <use xlinkHref=\"#circle\" className={style.circle} />\n                </svg>\n                <svg className={style.powerOn}>\n                  <use xlinkHref=\"#line\" className={style.line} />\n                  <use xlinkHref=\"#circle\" className={style.circle} />\n                </svg>\n              </div>\n            </div>\n          </Col>\n        </Col>\n        {/* Col 5 */}\n        <Col lg={{ size: 2 }} md={{ size: 2 }} sm={{ size: 2 }}>\n          <Col style={{ marginTop: \"5vh\", marginBottom: \"5vh\" }}>\n            <div className={style.powerSwitch}>\n              <input\n                checked={switchThirteen}\n                onChange={switchThirteenTrick}\n                type=\"checkbox\"\n                className={style.switch}\n              />\n              <div className={style.button}>\n                <svg class={style.powerOff}>\n                  <use xlinkHref=\"#line\" className={style.line} />\n                  <use xlinkHref=\"#circle\" className={style.circle} />\n                </svg>\n                <svg className={style.powerOn}>\n                  <use xlinkHref=\"#line\" className={style.line} />\n                  <use xlinkHref=\"#circle\" className={style.circle} />\n                </svg>\n              </div>\n            </div>\n          </Col>\n          <Col style={{ marginTop: \"5vh\", marginBottom: \"5vh\" }}>\n            <div className={style.powerSwitch}>\n              <input\n                checked={switchFourteen}\n                onChange={switchFourteenTrick}\n                type=\"checkbox\"\n                className={style.switch}\n              />\n              <div className={style.button}>\n                <svg class={style.powerOff}>\n                  <use xlinkHref=\"#line\" className={style.line} />\n                  <use xlinkHref=\"#circle\" className={style.circle} />\n                </svg>\n                <svg className={style.powerOn}>\n                  <use xlinkHref=\"#line\" className={style.line} />\n                  <use xlinkHref=\"#circle\" className={style.circle} />\n                </svg>\n              </div>\n            </div>\n          </Col>\n          <Col style={{ marginTop: \"5vh\", marginBottom: \"5vh\" }}>\n            <div className={style.powerSwitch}>\n              <input\n                checked={switchFifteen}\n                onChange={switchFifteenTrick}\n                type=\"checkbox\"\n                className={style.switch}\n              />\n              <div className={style.button}>\n                <svg class={style.powerOff}>\n                  <use xlinkHref=\"#line\" className={style.line} />\n                  <use xlinkHref=\"#circle\" className={style.circle} />\n                </svg>\n                <svg className={style.powerOn}>\n                  <use xlinkHref=\"#line\" className={style.line} />\n                  <use xlinkHref=\"#circle\" className={style.circle} />\n                </svg>\n              </div>\n            </div>\n          </Col>\n        </Col>\n        {/* Col 6 */}\n        <Col lg={{ size: 2 }} md={{ size: 2 }} sm={{ size: 2 }}>\n          <Col style={{ marginTop: \"5vh\", marginBottom: \"5vh\" }}>\n            <div className={style.powerSwitch}>\n              <input\n                checked={switchSixteen}\n                onChange={switchSixteenTrick}\n                type=\"checkbox\"\n                className={style.switch}\n              />\n              <div className={style.button}>\n                <svg class={style.powerOff}>\n                  <use xlinkHref=\"#line\" className={style.line} />\n                  <use xlinkHref=\"#circle\" className={style.circle} />\n                </svg>\n                <svg className={style.powerOn}>\n                  <use xlinkHref=\"#line\" className={style.line} />\n                  <use xlinkHref=\"#circle\" className={style.circle} />\n                </svg>\n              </div>\n            </div>\n          </Col>\n          <Col style={{ marginTop: \"5vh\", marginBottom: \"5vh\" }}>\n            <div className={style.powerSwitch}>\n              <input\n                checked={switchSeventeen}\n                onChange={switchSeventeenTrick}\n                type=\"checkbox\"\n                className={style.switch}\n              />\n              <div className={style.button}>\n                <svg class={style.powerOff}>\n                  <use xlinkHref=\"#line\" className={style.line} />\n                  <use xlinkHref=\"#circle\" className={style.circle} />\n                </svg>\n                <svg className={style.powerOn}>\n                  <use xlinkHref=\"#line\" className={style.line} />\n                  <use xlinkHref=\"#circle\" className={style.circle} />\n                </svg>\n              </div>\n            </div>\n          </Col>\n          <Col style={{ marginTop: \"5vh\", marginBottom: \"5vh\" }}>\n            <div className={style.powerSwitch}>\n              <input\n                checked={switchEighteen}\n                onChange={switchEightteenTrick}\n                type=\"checkbox\"\n                className={style.switch}\n              />\n              <div className={style.button}>\n                <svg class={style.powerOff}>\n                  <use xlinkHref=\"#line\" className={style.line} />\n                  <use xlinkHref=\"#circle\" className={style.circle} />\n                </svg>\n                <svg className={style.powerOn}>\n                  <use xlinkHref=\"#line\" className={style.line} />\n                  <use xlinkHref=\"#circle\" className={style.circle} />\n                </svg>\n              </div>\n            </div>\n          </Col>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n","/home/masato/game-work/switcher-front/src/components/store/actionTypes.js",[],"/home/masato/game-work/switcher-front/src/urls.js",[],"/home/masato/game-work/switcher-front/src/components/store/actionCreators.js",[],"/home/masato/game-work/switcher-front/src/components/LevelCard.jsx",[],"/home/masato/game-work/switcher-front/src/components/Credits.jsx",[],"/home/masato/game-work/switcher-front/src/components/ModalScore.jsx",[],"/home/masato/game-work/switcher-front/src/components/levels/ModalOne.jsx",[],"/home/masato/game-work/switcher-front/src/components/levels/ModalThree.jsx",[],"/home/masato/game-work/switcher-front/src/components/levels/ModalTwo.jsx",[],"/home/masato/game-work/switcher-front/src/components/levels/ModalFour.jsx",[],"/home/masato/game-work/switcher-front/src/components/levels/ModalFive.jsx",[],{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","severity":1,"message":"125","line":1,"column":27,"nodeType":"126","messageId":"127","endLine":1,"endColumn":36},{"ruleId":"124","severity":1,"message":"128","line":22,"column":9,"nodeType":"126","messageId":"127","endLine":22,"endColumn":13},{"ruleId":"129","severity":1,"message":"130","line":55,"column":8,"nodeType":"131","endLine":55,"endColumn":14,"suggestions":"132"},{"ruleId":"124","severity":1,"message":"133","line":13,"column":10,"nodeType":"126","messageId":"127","endLine":13,"endColumn":14},{"ruleId":"129","severity":1,"message":"134","line":47,"column":6,"nodeType":"131","endLine":47,"endColumn":8,"suggestions":"135"},{"ruleId":"124","severity":1,"message":"133","line":13,"column":10,"nodeType":"126","messageId":"127","endLine":13,"endColumn":14},{"ruleId":"129","severity":1,"message":"134","line":52,"column":6,"nodeType":"131","endLine":52,"endColumn":8,"suggestions":"136"},{"ruleId":"124","severity":1,"message":"133","line":13,"column":10,"nodeType":"126","messageId":"127","endLine":13,"endColumn":14},{"ruleId":"129","severity":1,"message":"134","line":49,"column":6,"nodeType":"131","endLine":49,"endColumn":8,"suggestions":"137"},{"ruleId":"129","severity":1,"message":"134","line":56,"column":6,"nodeType":"131","endLine":56,"endColumn":8,"suggestions":"138"},{"ruleId":"129","severity":1,"message":"134","line":60,"column":6,"nodeType":"131","endLine":60,"endColumn":8,"suggestions":"139"},"no-native-reassign",["140"],"no-negated-in-lhs",["141"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'uuid' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getAllInfos'. Either include it or remove the dependency array.","ArrayExpression",["142"],"'user' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getUser'. Either include it or remove the dependency array.",["143"],["144"],["145"],["146"],["147"],"no-global-assign","no-unsafe-negation",{"desc":"148","fix":"149"},{"desc":"150","fix":"151"},{"desc":"150","fix":"152"},{"desc":"150","fix":"153"},{"desc":"150","fix":"154"},{"desc":"150","fix":"155"},"Update the dependencies array to be: [getAllInfos, uuid]",{"range":"156","text":"157"},"Update the dependencies array to be: [getUser]",{"range":"158","text":"159"},{"range":"160","text":"159"},{"range":"161","text":"159"},{"range":"162","text":"159"},{"range":"163","text":"159"},[1609,1615],"[getAllInfos, uuid]",[1486,1488],"[getUser]",[1908,1910],[1730,1732],[2145,2147],[2319,2321]]